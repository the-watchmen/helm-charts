apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: {{ template "namespace" . }}
  name: {{ template "name" . }}
  annotations:
    {{- range $key, $value := .Values.metadataAnnotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
      annotations:
        {{- range $key, $value := .Values.specTemplateMetadataAnnotations }}
          {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
        {{- .Values.securityContext | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: {{ template "name" . }}
          image: {{ .Values.image.name }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
            {{- .Values.volumeMounts | toYaml | trim | nindent 12 }}
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- range .Values.command }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- .Values.resources | toYaml | trim | nindent 12 }}
          {{- end }}
          {{- if .Values.port }}
          ports:
            - containerPort: {{ .Values.port }}
            {{- if .Values.portAdd }}
            - containerPort: {{ .Values.portAdd }}
            {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- if .Values.readinessProbe.isTcp }}
            tcpSocket:
            {{- else }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
            {{- end }}
              port: {{ .Values.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- if .Values.livenessProbe.isTcp }}
            tcpSocket:
            {{- else }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
            {{- end }}
              port: {{ .Values.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- end }} # if Values.port
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
              - name: {{ $key }}
              {{- if eq (kindOf $value) "map" }}
                {{- $value | toYaml | trim | nindent 16 }}
              {{- else }}
                value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
        {{- .Values.volumes | toYaml | trim | nindent 8 }}
      {{- end}}
